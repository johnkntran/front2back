version: '3'

services:

  database:
    container_name: f2b-db
    image: pgvector/pgvector:pg18-trixie
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - database:/var/lib/postgresql/data
      - ./backend/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - front2back

  cache:
    container_name: f2b-cache
    image: redis/redis-stack:7.4.0-v7
    restart: always
    volumes:
      - cache:/data
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - front2back

  backend:
    container_name: f2b-back
    build:
      dockerfile: backend/Dockerfile
      context: .
      secrets:
        - env
    command: bash -c "
      uv tool update-shell && 
      python main.py"
    volumes:
      - ./backend:/code
      - ./.env:/code/.env # For Aider
    ports:
      - "8000:8000"
    depends_on:
      - database
      - cache
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONDEVMODE=1
    env_file:
      - .env
    networks:
      - front2back
  
  frontend:
    container_name: f2b-front
    build:
      dockerfile: frontend/Dockerfile
      context: .
      secrets:
        - env
    command: bash -c "npm install && npm run dev"
    volumes:
      - ./frontend:/code
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - .env
    networks:
      - front2back

networks:
  front2back:
    name: front2back-network

volumes:
  cache:
    name: front2back-cache
  database:
    name: front2back-database

secrets:
  env:
    file: .env

